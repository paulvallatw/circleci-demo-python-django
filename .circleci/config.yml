version: 2
jobs:
  unittest:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            pipenv run "python manage.py test"
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
  build:
    machine: true
    environment:
      DOCKER_GCR: "asia.gcr.io"
    steps:
      - checkout
      - run: 
          name: Build docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKER_GCR/$GOOGLE_PROJECT_ID/circleci-demo-python-django:$TAG .
      - run:
          name: Decode service account key to push to docker registry
          command: echo $BASE64_SERVICE_ACCOUNT | base64 -d > ${HOME}/gcloud-service-key.json
      - run:
          name: Authenticate to gcloud
          command: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run:
          name: Configure Docker to use gcloud as a credential helper
          command: gcloud auth configure-docker
      - run:
          name: push docker image
          command: docker push $DOCKER_GCR/$GOOGLE_PROJECT_ID/circleci-demo-python-django:$TAG
workflows:
  version: 2
  unittest-build:
    jobs:
      - unittest
      - build:
          requires:
            - unittest
